@output("qout_1").
@bind("qout_1","csv","generatedPrograms/ontology354/outputCsv/","qout_1_csv.csv").
@input("edb_5").
@bind("edb_5","csv","generatedPrograms/ontology354/inputCsv/","edb_5_csv.csv").
@mapping("edb_5",0,"arg_0","int").
@mapping("edb_5",1,"arg_1","int").
@mapping("edb_5",2,"arg_2","int").
@mapping("edb_5",3,"arg_3","int").
@input("edb_2").
@bind("edb_2","csv","generatedPrograms/ontology354/inputCsv/","edb_2_csv.csv").
@mapping("edb_2",0,"arg_0","int").
@mapping("edb_2",1,"arg_1","int").
@input("edb_28").
@bind("edb_28","csv","generatedPrograms/ontology354/inputCsv/","edb_28_csv.csv").
@mapping("edb_28",0,"arg_0","int").
@mapping("edb_28",1,"arg_1","int").
@mapping("edb_28",2,"arg_2","int").
@mapping("edb_28",3,"arg_3","int").
@mapping("edb_28",4,"arg_4","int").
@input("edb_95").
@bind("edb_95","csv","generatedPrograms/ontology354/inputCsv/","edb_95_csv.csv").
@mapping("edb_95",0,"arg_0","int").
@mapping("edb_95",1,"arg_1","int").
@input("edb_31").
@bind("edb_31","csv","generatedPrograms/ontology354/inputCsv/","edb_31_csv.csv").
@mapping("edb_31",0,"arg_0","int").
@mapping("edb_31",1,"arg_1","int").
@mapping("edb_31",2,"arg_2","int").
@mapping("edb_31",3,"arg_3","int").
@input("edb_81").
@bind("edb_81","csv","generatedPrograms/ontology354/inputCsv/","edb_81_csv.csv").
@mapping("edb_81",0,"arg_0","int").
@mapping("edb_81",1,"arg_1","int").
@mapping("edb_81",2,"arg_2","int").
@mapping("edb_81",3,"arg_3","int").
@input("edb_12").
@bind("edb_12","csv","generatedPrograms/ontology354/inputCsv/","edb_12_csv.csv").
@mapping("edb_12",0,"arg_0","int").
@mapping("edb_12",1,"arg_1","int").
@mapping("edb_12",2,"arg_2","int").
@mapping("edb_12",3,"arg_3","int").
@mapping("edb_12",4,"arg_4","int").
@input("edb_37").
@bind("edb_37","csv","generatedPrograms/ontology354/inputCsv/","edb_37_csv.csv").
@mapping("edb_37",0,"arg_0","int").
@mapping("edb_37",1,"arg_1","int").
@input("edb_35").
@bind("edb_35","csv","generatedPrograms/ontology354/inputCsv/","edb_35_csv.csv").
@mapping("edb_35",0,"arg_0","int").
@mapping("edb_35",1,"arg_1","int").
@mapping("edb_35",2,"arg_2","int").
@input("edb_71").
@bind("edb_71","csv","generatedPrograms/ontology354/inputCsv/","edb_71_csv.csv").
@mapping("edb_71",0,"arg_0","int").
@mapping("edb_71",1,"arg_1","int").
@mapping("edb_71",2,"arg_2","int").
@mapping("edb_71",3,"arg_3","int").
@mapping("edb_71",4,"arg_4","int").
@input("edb_86").
@bind("edb_86","csv","generatedPrograms/ontology354/inputCsv/","edb_86_csv.csv").
@mapping("edb_86",0,"arg_0","int").
@mapping("edb_86",1,"arg_1","int").
@mapping("edb_86",2,"arg_2","int").
@input("edb_10").
@bind("edb_10","csv","generatedPrograms/ontology354/inputCsv/","edb_10_csv.csv").
@mapping("edb_10",0,"arg_0","int").
@mapping("edb_10",1,"arg_1","int").
@mapping("edb_10",2,"arg_2","int").
@input("edb_69").
@bind("edb_69","csv","generatedPrograms/ontology354/inputCsv/","edb_69_csv.csv").
@mapping("edb_69",0,"arg_0","int").
@mapping("edb_69",1,"arg_1","int").
@mapping("edb_69",2,"arg_2","int").
@input("edb_96").
@bind("edb_96","csv","generatedPrograms/ontology354/inputCsv/","edb_96_csv.csv").
@mapping("edb_96",0,"arg_0","int").
@mapping("edb_96",1,"arg_1","int").
@input("edb_32").
@bind("edb_32","csv","generatedPrograms/ontology354/inputCsv/","edb_32_csv.csv").
@mapping("edb_32",0,"arg_0","int").
@mapping("edb_32",1,"arg_1","int").
@input("edb_44").
@bind("edb_44","csv","generatedPrograms/ontology354/inputCsv/","edb_44_csv.csv").
@mapping("edb_44",0,"arg_0","int").
@mapping("edb_44",1,"arg_1","int").
@input("edb_100").
@bind("edb_100","csv","generatedPrograms/ontology354/inputCsv/","edb_100_csv.csv").
@mapping("edb_100",0,"arg_0","int").
@mapping("edb_100",1,"arg_1","int").
@input("edb_66").
@bind("edb_66","csv","generatedPrograms/ontology354/inputCsv/","edb_66_csv.csv").
@mapping("edb_66",0,"arg_0","int").
@mapping("edb_66",1,"arg_1","int").
@mapping("edb_66",2,"arg_2","int").
@input("edb_85").
@bind("edb_85","csv","generatedPrograms/ontology354/inputCsv/","edb_85_csv.csv").
@mapping("edb_85",0,"arg_0","int").
@mapping("edb_85",1,"arg_1","int").
@mapping("edb_85",2,"arg_2","int").
qout_1(U0, U1, U1, U1) :- edb_5(U0, U1, U2, U3).
