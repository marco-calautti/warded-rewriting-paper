@output("qout_1").
@bind("qout_1","csv","generatedPrograms/ontology129/outputCsv/","qout_1_csv.csv").
@input("edb_67").
@bind("edb_67","csv","generatedPrograms/ontology129/inputCsv/","edb_67_csv.csv").
@mapping("edb_67",0,"arg_0","int").
@mapping("edb_67",1,"arg_1","int").
@mapping("edb_67",2,"arg_2","int").
@mapping("edb_67",3,"arg_3","int").
@input("edb_97").
@bind("edb_97","csv","generatedPrograms/ontology129/inputCsv/","edb_97_csv.csv").
@mapping("edb_97",0,"arg_0","int").
@mapping("edb_97",1,"arg_1","int").
@mapping("edb_97",2,"arg_2","int").
@mapping("edb_97",3,"arg_3","int").
@input("edb_13").
@bind("edb_13","csv","generatedPrograms/ontology129/inputCsv/","edb_13_csv.csv").
@mapping("edb_13",0,"arg_0","int").
@mapping("edb_13",1,"arg_1","int").
@mapping("edb_13",2,"arg_2","int").
@input("edb_96").
@bind("edb_96","csv","generatedPrograms/ontology129/inputCsv/","edb_96_csv.csv").
@mapping("edb_96",0,"arg_0","int").
@mapping("edb_96",1,"arg_1","int").
@mapping("edb_96",2,"arg_2","int").
@mapping("edb_96",3,"arg_3","int").
@input("edb_80").
@bind("edb_80","csv","generatedPrograms/ontology129/inputCsv/","edb_80_csv.csv").
@mapping("edb_80",0,"arg_0","int").
@mapping("edb_80",1,"arg_1","int").
@mapping("edb_80",2,"arg_2","int").
@input("edb_64").
@bind("edb_64","csv","generatedPrograms/ontology129/inputCsv/","edb_64_csv.csv").
@mapping("edb_64",0,"arg_0","int").
@mapping("edb_64",1,"arg_1","int").
@mapping("edb_64",2,"arg_2","int").
@input("edb_89").
@bind("edb_89","csv","generatedPrograms/ontology129/inputCsv/","edb_89_csv.csv").
@mapping("edb_89",0,"arg_0","int").
@mapping("edb_89",1,"arg_1","int").
@mapping("edb_89",2,"arg_2","int").
@mapping("edb_89",3,"arg_3","int").
@input("edb_31").
@bind("edb_31","csv","generatedPrograms/ontology129/inputCsv/","edb_31_csv.csv").
@mapping("edb_31",0,"arg_0","int").
@mapping("edb_31",1,"arg_1","int").
@input("edb_85").
@bind("edb_85","csv","generatedPrograms/ontology129/inputCsv/","edb_85_csv.csv").
@mapping("edb_85",0,"arg_0","int").
@mapping("edb_85",1,"arg_1","int").
@mapping("edb_85",2,"arg_2","int").
@mapping("edb_85",3,"arg_3","int").
@input("edb_92").
@bind("edb_92","csv","generatedPrograms/ontology129/inputCsv/","edb_92_csv.csv").
@mapping("edb_92",0,"arg_0","int").
@mapping("edb_92",1,"arg_1","int").
@mapping("edb_92",2,"arg_2","int").
@mapping("edb_92",3,"arg_3","int").
@input("edb_14").
@bind("edb_14","csv","generatedPrograms/ontology129/inputCsv/","edb_14_csv.csv").
@mapping("edb_14",0,"arg_0","int").
@mapping("edb_14",1,"arg_1","int").
@input("edb_35").
@bind("edb_35","csv","generatedPrograms/ontology129/inputCsv/","edb_35_csv.csv").
@mapping("edb_35",0,"arg_0","int").
@mapping("edb_35",1,"arg_1","int").
@mapping("edb_35",2,"arg_2","int").
@input("edb_73").
@bind("edb_73","csv","generatedPrograms/ontology129/inputCsv/","edb_73_csv.csv").
@mapping("edb_73",0,"arg_0","int").
@mapping("edb_73",1,"arg_1","int").
@mapping("edb_73",2,"arg_2","int").
@mapping("edb_73",3,"arg_3","int").
@input("edb_38").
@bind("edb_38","csv","generatedPrograms/ontology129/inputCsv/","edb_38_csv.csv").
@mapping("edb_38",0,"arg_0","int").
@mapping("edb_38",1,"arg_1","int").
@mapping("edb_38",2,"arg_2","int").
@mapping("edb_38",3,"arg_3","int").
@mapping("edb_38",4,"arg_4","int").
@input("edb_65").
@bind("edb_65","csv","generatedPrograms/ontology129/inputCsv/","edb_65_csv.csv").
@mapping("edb_65",0,"arg_0","int").
@mapping("edb_65",1,"arg_1","int").
@mapping("edb_65",2,"arg_2","int").
@mapping("edb_65",3,"arg_3","int").
@mapping("edb_65",4,"arg_4","int").
qout_1(U0, U1, U1) :- qout_1_4_1(U0), qout_1_1_1(U0, U1).
qout_1_1_2(U0) :- edb_14(U1, U0).
qout_1_5_1(U0) :- edb_85(U1, U2, U3, U0).
qout_1(U0, U1, U1) :- qout_1_5_1(U0), qout_1_1_1(U0, U1).
qout_1_4_1(U0) :- qout_1_1_2(U1), qout_1_1_1(U1, U0).
qout_1_2_1(U0) :- edb_38(U1, U2, U3, U4, U0).
qout_1_3_2(U0) :- edb_96(U1, U2, U3, U0).
qout_1_1_1(U0, U1) :- edb_14(U0, U1).
qout_1(U0, U1, U1) :- qout_1_1_1(U0, U1), qout_1_3_2(U0).
qout_1(U0, U0, U0) :- edb_14(U0, U1).
qout_1(U0, U1, U1) :- qout_1_1_1(U0, U1), qout_1_2_1(U0).
qout_1(U0, U1, U1) :- qout_1_1_2(U0), qout_1_1_1(U0, U1).
