@output("qout_1").
@bind("qout_1","csv","generatedPrograms/ontology169/outputCsv/","qout_1_csv.csv").
@input("edb_16").
@bind("edb_16","csv","generatedPrograms/ontology169/inputCsv/","edb_16_csv.csv").
@mapping("edb_16",0,"arg_0","int").
@mapping("edb_16",1,"arg_1","int").
@mapping("edb_16",2,"arg_2","int").
@mapping("edb_16",3,"arg_3","int").
@input("edb_63").
@bind("edb_63","csv","generatedPrograms/ontology169/inputCsv/","edb_63_csv.csv").
@mapping("edb_63",0,"arg_0","int").
@mapping("edb_63",1,"arg_1","int").
@input("edb_51").
@bind("edb_51","csv","generatedPrograms/ontology169/inputCsv/","edb_51_csv.csv").
@mapping("edb_51",0,"arg_0","int").
@mapping("edb_51",1,"arg_1","int").
@mapping("edb_51",2,"arg_2","int").
@input("edb_62").
@bind("edb_62","csv","generatedPrograms/ontology169/inputCsv/","edb_62_csv.csv").
@mapping("edb_62",0,"arg_0","int").
@mapping("edb_62",1,"arg_1","int").
@mapping("edb_62",2,"arg_2","int").
@input("edb_100").
@bind("edb_100","csv","generatedPrograms/ontology169/inputCsv/","edb_100_csv.csv").
@mapping("edb_100",0,"arg_0","int").
@mapping("edb_100",1,"arg_1","int").
@mapping("edb_100",2,"arg_2","int").
@input("edb_15").
@bind("edb_15","csv","generatedPrograms/ontology169/inputCsv/","edb_15_csv.csv").
@mapping("edb_15",0,"arg_0","int").
@mapping("edb_15",1,"arg_1","int").
@mapping("edb_15",2,"arg_2","int").
@mapping("edb_15",3,"arg_3","int").
@input("edb_92").
@bind("edb_92","csv","generatedPrograms/ontology169/inputCsv/","edb_92_csv.csv").
@mapping("edb_92",0,"arg_0","int").
@mapping("edb_92",1,"arg_1","int").
@input("edb_28").
@bind("edb_28","csv","generatedPrograms/ontology169/inputCsv/","edb_28_csv.csv").
@mapping("edb_28",0,"arg_0","int").
@mapping("edb_28",1,"arg_1","int").
@input("edb_14").
@bind("edb_14","csv","generatedPrograms/ontology169/inputCsv/","edb_14_csv.csv").
@mapping("edb_14",0,"arg_0","int").
@input("edb_3").
@bind("edb_3","csv","generatedPrograms/ontology169/inputCsv/","edb_3_csv.csv").
@mapping("edb_3",0,"arg_0","int").
@mapping("edb_3",1,"arg_1","int").
@input("edb_42").
@bind("edb_42","csv","generatedPrograms/ontology169/inputCsv/","edb_42_csv.csv").
@mapping("edb_42",0,"arg_0","int").
@mapping("edb_42",1,"arg_1","int").
@mapping("edb_42",2,"arg_2","int").
@mapping("edb_42",3,"arg_3","int").
@input("edb_31").
@bind("edb_31","csv","generatedPrograms/ontology169/inputCsv/","edb_31_csv.csv").
@mapping("edb_31",0,"arg_0","int").
@mapping("edb_31",1,"arg_1","int").
@mapping("edb_31",2,"arg_2","int").
@input("edb_50").
@bind("edb_50","csv","generatedPrograms/ontology169/inputCsv/","edb_50_csv.csv").
@mapping("edb_50",0,"arg_0","int").
@mapping("edb_50",1,"arg_1","int").
@input("edb_87").
@bind("edb_87","csv","generatedPrograms/ontology169/inputCsv/","edb_87_csv.csv").
@mapping("edb_87",0,"arg_0","int").
@mapping("edb_87",1,"arg_1","int").
@mapping("edb_87",2,"arg_2","int").
@mapping("edb_87",3,"arg_3","int").
@input("edb_23").
@bind("edb_23","csv","generatedPrograms/ontology169/inputCsv/","edb_23_csv.csv").
@mapping("edb_23",0,"arg_0","int").
@mapping("edb_23",1,"arg_1","int").
@mapping("edb_23",2,"arg_2","int").
@mapping("edb_23",3,"arg_3","int").
@input("edb_86").
@bind("edb_86","csv","generatedPrograms/ontology169/inputCsv/","edb_86_csv.csv").
@mapping("edb_86",0,"arg_0","int").
@mapping("edb_86",1,"arg_1","int").
@input("edb_69").
@bind("edb_69","csv","generatedPrograms/ontology169/inputCsv/","edb_69_csv.csv").
@mapping("edb_69",0,"arg_0","int").
@mapping("edb_69",1,"arg_1","int").
@mapping("edb_69",2,"arg_2","int").
@mapping("edb_69",3,"arg_3","int").
@mapping("edb_69",4,"arg_4","int").
@mapping("edb_69",5,"arg_5","int").
@input("edb_40").
@bind("edb_40","csv","generatedPrograms/ontology169/inputCsv/","edb_40_csv.csv").
@mapping("edb_40",0,"arg_0","int").
@mapping("edb_40",1,"arg_1","int").
@mapping("edb_40",2,"arg_2","int").
@mapping("edb_40",3,"arg_3","int").
@mapping("edb_40",4,"arg_4","int").
qout_1(U0) :- edb_40(U0, U1, U2, U3, U4).
qout_1_77_1(U0) :- qout_1_77_1_128_2(U0), qout_1_77_1_128_1(U0).
qout_1(U0) :- qout_1_77_1(U0), qout_1_77_2(U0).
qout_1_77_1_128_2(U0) :- edb_40(U0, U1, U2, U3, U4).
qout_1_77_1_128_1(U0) :- edb_16(U1, U2, U3, U0).
qout_1_77_2(U0) :- qout_1_77_1_128_2(U0), qout_1_77_1_128_1(U0).
qout_1_77_1_128_2(U0) :- qout_1_77_1(U0).
